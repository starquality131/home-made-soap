{"version":3,"sources":["data/oilList.js","base/base.js","components/SelectRow.js","App.js","serviceWorker.js","index.js"],"names":["oilList","name","enName","saponificationValue","INS","iodineValue","suggestPercentage","feature","base","strip","num","precision","arguments","length","undefined","parseFloat","toPrecision","calc","fixed","toFixed","isNaNToZero","Number","isNaN","SelectRow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","doOilOptions","data","map","oil","oilOptionIndex","react_default","a","createElement","value","key","data-index","calculation","state","usePercentage","useOilGram","NaOHGram","calcIns","totalOilGram","oilPercentage","oilData","className","id","onChange","handleOilSelect","defaultValue","data-row-index","index","oils","react","type","handleOilGramChange","oilGram","handleOilPercentageChange","href","onClick","handleDeleteRow","PureComponent","App","calcTotal","asyncToGenerator","regenerator_default","mark","_callee","totalNaOHGram","totalINS","totalWaterGram","totalPercentage","wrap","_context","prev","next","oilLists","forEach","waterTimes","setState","stop","updateOilLists","newOilLists","handleInputChange","e","concat","target","defineProperty","rowIndex","dataset","selectedOil","find","totalOilWeight","_ref2","_callee2","_context2","persist","console","log","_x","apply","splice","handleAddOil","objectSpread","defaultOilRowData","handleWaterTimesInputChange","waterTimesValue","doTableRow","selectedOilArray","components_SelectRow","defaultOilData","soapName","essentialOilPercentage","totalEssentialOilcc","additives","d","Date","year","getFullYear","month","getMonth","substr","date","getDate","today","join","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdfe7ca4.chunk.js","sourcesContent":["const oilList = [\n    {\n        name: '椰子油',\n        enName: 'Coconut',\n        // 皂化價\n        saponificationValue: 0.19,\n        INS: 258,\n        // 碘價\n        iodineValue: '10',\n        // 建議％\n        suggestPercentage: '15~35%',\n        // 特徵\n        feature: '可促進起泡',\n    },\n    {\n        name: '棕櫚油',\n        enName: 'Palm',\n        // 皂化價\n        saponificationValue: 0.141,\n        INS: 145,\n        // 碘價\n        iodineValue: '37-45',\n        // 建議％\n        suggestPercentage: '10~60%',\n        // 特徵\n        feature: '不易溶化變形的硬肥皂',\n    },\n    {\n        name: '紅棕櫚油',\n        enName: 'Red_Cocoa_Butter',\n        // 皂化價\n        saponificationValue: 0.141,\n        INS: 145,\n        // 碘價\n        iodineValue: '37-45',\n        // 建議％\n        suggestPercentage: '10~60%',\n        // 特徵\n        feature: '不易溶化變形的硬肥皂',\n    },\n    {\n        name: '橄欖油',\n        enName: 'Olive_Oil',\n        // 皂化價\n        saponificationValue: 0.134,\n        INS: 109,\n        // 碘價\n        iodineValue: '79-95',\n        // 建議％\n        suggestPercentage: '可100%使用',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '乳油木果脂',\n        enName: 'Shea_Butter',\n        // 皂化價\n        saponificationValue: 0.128,\n        INS: 116,\n        // 碘價\n        iodineValue: '55-71',\n        // 建議％\n        suggestPercentage: '5~10%',\n        // 特徵\n        feature: '不易溶化變形的硬肥皂,並能在皮膚上形成保護膜',\n    },\n    {\n        name: '可可脂',\n        enName: 'Cocoa_Butter',\n        // 皂化價\n        saponificationValue: 0.137,\n        INS: 157,\n        // 碘價\n        iodineValue: '33-44',\n        // 建議％\n        suggestPercentage: '5~10%',\n        // 特徵\n        feature: '不易溶化變形的硬肥皂,並能在皮膚上形成保護膜',\n    },\n    {\n        name: '甜杏仁油',\n        enName: 'Almond_Sweet',\n        // 皂化價\n        saponificationValue: 0.136,\n        INS: 97,\n        // 碘價\n        iodineValue: '93-105',\n        // 建議％\n        suggestPercentage: '15~30%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '酪梨油',\n        enName: 'Avocado',\n        // 皂化價\n        saponificationValue: 0.133,\n        INS: 99,\n        // 碘價\n        iodineValue: '82-90',\n        // 建議％\n        suggestPercentage: '10~30%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '山茶花(椿油)',\n        enName: 'Camellia',\n        // 皂化價\n        saponificationValue: 0.1362,\n        INS: 108,\n        // 碘價\n        iodineValue: '78-88',\n        // 建議％\n        suggestPercentage: '可100%使用',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '蓖麻油',\n        enName: 'Castor',\n        // 皂化價\n        saponificationValue: 0.1286,\n        INS: 95,\n        // 碘價\n        iodineValue: '82-90',\n        // 建議％\n        suggestPercentage: '5~20%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '榛果油',\n        enName: 'Hazelnut',\n        // 皂化價\n        saponificationValue: 0.1356,\n        INS: 94,\n        // 碘價\n        iodineValue: '90-103',\n        // 建議％\n        suggestPercentage: '15~30%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '澳洲胡桃油',\n        enName: 'Macadamia',\n        // 皂化價\n        saponificationValue: 0.139,\n        INS: 119,\n        // 碘價\n        iodineValue: '73-79',\n        // 建議％\n        suggestPercentage: '15~30%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '荷荷芭油',\n        enName: 'Jojoba',\n        // 皂化價\n        saponificationValue: 0.066,\n        INS: 11,\n        // 碘價\n        iodineValue: '80-85',\n        // 建議％\n        suggestPercentage: '5~10%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '米糠油(玄米油)',\n        enName: 'Rice_Bran',\n        // 皂化價\n        saponificationValue: 0.128,\n        INS: 70,\n        // 碘價\n        iodineValue: '110',\n        // 建議％\n        suggestPercentage: '20%',\n        // 特徵\n        feature: '有清爽感覺肥皂的油',\n    },\n    {\n        name: '開心果油',\n        enName: 'Pistachio_Nut',\n        // 皂化價\n        saponificationValue: 0.1328,\n        INS: 92,\n        // 碘價\n        iodineValue: '93-96',\n        // 建議％\n        suggestPercentage: '20~72%',\n        // 特徵\n        feature: '',\n    },\n    {\n        name: '葡萄籽油',\n        enName: 'Grapeseed',\n        // 皂化價\n        saponificationValue: 0.1265,\n        INS: 66,\n        // 碘價\n        iodineValue: '125-137',\n        // 建議％\n        suggestPercentage: '10%',\n        // 特徵\n        feature: '有清爽感覺肥皂的油',\n    },\n    {\n        name: '月見草油',\n        enName: 'Evening_Primrose',\n        // 皂化價\n        saponificationValue: 0.1357,\n        INS: 30,\n        // 碘價\n        iodineValue: '150-170',\n        // 建議％\n        suggestPercentage: '5%-superfatting',\n        // 特徵\n        feature: '對問題皮膚特別有效用的油',\n    },\n    {\n        name: '蜜蠟',\n        enName: 'Beeswax',\n        // 皂化價\n        saponificationValue: 0.069,\n        INS: 84,\n        // 碘價\n        iodineValue: '',\n        // 建議％\n        suggestPercentage: '<6%',\n        // 特徵\n        feature: '熔點61-66度',\n    },\n    {\n        name: '白油',\n        enName: 'Shortening_(veg.)',\n        // 皂化價\n        saponificationValue: 0.136,\n        INS: 115,\n        // 碘價\n        iodineValue: '90-95',\n        // 建議％\n        suggestPercentage: '10~20%',\n        // 特徵\n        feature: '',\n    },\n];\n\nexport default oilList;\n","export default {\n\n    strip: (num, precision = 12) => +parseFloat(num.toPrecision(precision)),\n    calc: (num, fixed = 0) => +parseFloat((num).toFixed(fixed)),\n    isNaNToZero: num => (Number.isNaN(num) ? 0 : num),\n\n};\n","/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { PureComponent, Fragment } from 'react';\nimport '../css/SelectRow.scss';\nimport base from '../base/base';\n\nclass SelectRow extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usePercentage: '',\n            // 使用的油品g數\n            useOilGram: '',\n            // 需要的ＮaOHg數\n            NaOHGram: '',\n        };\n\n        this.NaOHGram = null;\n        this.calcIns = null;\n    }\n\n    doOilOptions = (data) => (\n\n        data.map((oil, oilOptionIndex) => (\n\n            <option \n                value={oil.enName} \n                key={oilOptionIndex}\n                data-index={oilOptionIndex}\n            >\n                {oil.name}\n            </option>\n\n        ))\n\n    )\n\n    calculation = () => {}\n\n    render() {\n\n        this.NaOHGram = base.calc(base.strip(this.props.totalOilGram * this.props.data.oilPercentage / 100 * this.props.data.oilData.saponificationValue), 2);\n        this.NaOHGram = base.isNaNToZero(this.NaOHGram) ;\n\n        this.calcIns = base.calc(base.strip(this.props.data.oilData.INS * this.props.data.oilPercentage / 100), 2);\n        this.calcIns = base.isNaNToZero(this.calcIns);\n\n        return (\n            <ul className=\"tableRow\">\n                <li className=\"tableCol oil_select\">\n                    <select \n                        id=\"oilName\"\n                        onChange={this.props.handleOilSelect}\n                        value={this.props.defaultValue}\n                        data-row-index={this.props.index}\n                    >\n                        {(this.props.defaultValue === '') ? (\n                            <option value=\"\">請選擇</option>\n                        ) : null}\n                        {this.doOilOptions(this.props.oils)}\n                    </select>\n                    {(this.props.defaultValue !== '') ? (\n                        <Fragment>\n                            &nbsp;<span>({this.props.data.oilData.suggestPercentage})</span>\n                        </Fragment>\n                    ) : null}\n                </li>\n                {/*INS*/}\n                <li className=\"tableCol\">{this.props.data.oilData.INS}</li>\n                {/*皂化價*/}\n                <li className=\"tableCol\">{this.props.data.oilData.saponificationValue}</li>\n                {/*oil g*/}\n                <li className=\"tableCol oil_gram\">\n                    <input\n                        type=\"number\"\n                        data-row-index={this.props.index}\n                        onChange={this.props.handleOilGramChange}\n                        defaultValue={this.props.data.oilGram}\n                    />&nbsp;g\n                </li>\n                {/*NaOH g*/}\n                <li className=\"tableCol\">\n                    {this.NaOHGram}\n                </li>\n                {/*oil %*/}\n                <li className=\"tableCol oil_percentage\">\n                    <input\n                        type=\"number\"\n                        data-row-index={this.props.index}\n                        onChange={this.props.handleOilPercentageChange}\n                        defaultValue={this.props.data.oilPercentage}\n                    />&nbsp;%\n                </li>\n                {/*Calc. INS*/}\n                <li className=\"tableCol\">\n                    {this.calcIns}\n                </li>\n                {/*操作*/}\n                <li className=\"tableCol\">\n                    <a \n                        className=\"delete_btn\"\n                        data-row-index={this.props.index}\n                        href=\"javascript:;\"\n                        onClick={this.props.handleDeleteRow}\n                    >-</a>\n                </li>\n            </ul>\n        );\n    }\n}\n\nexport default SelectRow;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from 'react';\nimport './App.css';\nimport oilList from './data/oilList';\nimport SelectRow from './components/SelectRow';\nimport base from './base/base';\n\nclass App extends Component {\n    constructor(props) {\n\n        super(props);\n\n        this.defaultOilData = {\n            name: '',\n            enName: '',\n            // 皂化價\n            saponificationValue: null,\n            INS: null,\n            // 碘價\n            iodineValue: null,\n            // 建議％\n            suggestPercentage: '',\n            // 特徵\n            feature: '',\n        };\n\n        this.defaultOilRowData = {\n            oilData: this.defaultOilData,\n            oilPercentage: null,\n            oilGram: null,\n        };\n\n        this.state = {\n            soapName: '',\n\n            oilLists: [\n                {...this.defaultOilRowData},\n                {...this.defaultOilRowData},\n                {...this.defaultOilRowData},\n            ],\n\n            // 總油重\n            totalOilGram: 700,\n            // 成品皂的INS\n            totalINS: 0,\n            // 總油％\n            totalPercentage: 0,\n\n            // 總NaOH重\n            totalNaOHGram: 0,\n            // 水的倍數\n            waterTimes: 0,\n            // 總水重\n            totalWaterGram: 0,\n\n            // 總精油%\n            essentialOilPercentage: null,\n            // 總精油%cc\n            totalEssentialOilcc: null,\n\n            // 添加物\n            additives: [],\n        };\n\n        const d = new Date(),\n            year = d.getFullYear(),\n            month = `0${d.getMonth() + 1}`.substr(-2),\n            date = `0${d.getDate()}`.substr(-2);\n        this.today = [year, month, date].join('-'); \n\n    }\n\n    calcTotal = async () => {\n\n        let totalNaOHGram = 0,\n            totalINS = 0,\n            totalWaterGram = 0,\n            totalPercentage = 0;\n\n        await this.state.oilLists.forEach((oil) => {\n\n            if (oil.oilData.saponificationValue) {\n\n                totalNaOHGram = base.calc(base.strip(totalNaOHGram + (this.state.totalOilGram * oil.oilPercentage / 100 * oil.oilData.saponificationValue)), 2);\n\n            }\n\n            if (oil.oilData.INS) {\n\n                totalINS = base.calc(base.strip(totalINS + (oil.oilPercentage / 100 * oil.oilData.INS)), 2);\n\n            }\n\n            totalPercentage = base.calc(base.strip(totalPercentage + oil.oilPercentage), 0);\n            \n        });\n\n        totalWaterGram = base.strip(totalNaOHGram * this.state.waterTimes);\n\n        totalNaOHGram = base.isNaNToZero(totalNaOHGram);\n        totalINS = base.isNaNToZero(totalINS);\n        totalWaterGram = base.isNaNToZero(totalWaterGram);\n        totalPercentage = base.isNaNToZero(totalPercentage);\n\n        this.setState({\n            totalNaOHGram,\n            totalINS,\n            totalWaterGram,\n            totalPercentage,\n        });\n\n    }\n\n    updateOilLists = (newOilLists) => {\n\n        this.setState({\n            oilLists: newOilLists\n        }, () => {\n\n            this.calcTotal();\n\n        });\n\n    }\n\n    handleInputChange = (e) => {\n\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists.forEach((oil) => {\n            oil.oilGram = base.calc(base.strip(e.target.value * oil.oilPercentage / 100), 0);\n        });\n\n        this.setState({ [e.target.id]: e.target.value }, () => {\n\n            this.updateOilLists(newOilLists);\n\n        });\n\n    }\n\n    handleOilSelect = (e) => {\n\n        const rowIndex = e.target.dataset.rowIndex;\n        const value = e.target.value;\n        const selectedOil = [].concat(oilList).find((oil) => oil.enName === value);\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists[rowIndex].oilData = selectedOil;\n\n        this.updateOilLists(newOilLists);\n    \n    }\n\n    handleOilPercentageChange = (e) => {\n\n        const rowIndex = e.target.dataset.rowIndex,\n            totalOilWeight = this.state.totalOilGram;\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists[rowIndex].oilPercentage = (e.target.value === '') ? null : +e.target.value;\n        newOilLists[rowIndex].oilGram = (e.target.value === '') ? null : base.strip(totalOilWeight * (+e.target.value) / 100);\n\n        this.updateOilLists(newOilLists);\n\n    }\n\n    handleOilGramChange = async (e) => {\n\n        e.persist();\n\n        const rowIndex = e.target.dataset.rowIndex;\n        let newOilLists = [].concat(this.state.oilLists),\n            totalOilWeight = 0;\n\n            console.log('bb', e.target.value);\n            \n        newOilLists[rowIndex].oilGram = (e.target.value === '') ? null : +e.target.value;\n        await newOilLists.forEach((oil) => {\n            totalOilWeight = base.calc(base.strip(totalOilWeight + oil.oilGram), 2);\n        });\n        await newOilLists.forEach((oil) => {\n            oil.oilPercentage = base.calc(base.strip(oil.oilGram / totalOilWeight * 100), 0);\n        });\n\n        // if (+e.target.value > 0) {\n\n            this.setState({\n                totalOilGram: (totalOilWeight <= 0) ? 700 : totalOilWeight,\n            }, () => {\n\n                this.updateOilLists(newOilLists);\n\n            });\n\n        // }\n\n    }\n\n    handleDeleteRow = (e) => {\n\n        const rowIndex = e.target.dataset.rowIndex;\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists.splice(rowIndex, 1);\n\n        this.updateOilLists(newOilLists);\n\n    }\n\n    handleAddOil = () => {\n\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists = newOilLists.concat([{...this.defaultOilRowData}]);\n\n        this.updateOilLists(newOilLists);\n\n    }\n\n    handleWaterTimesInputChange =(e) => {\n\n        const waterTimesValue = e.target.value;\n        this.setState({\n            waterTimes: +waterTimesValue,\n            totalWaterGram: base.strip(waterTimesValue * this.state.totalNaOHGram)\n        });\n\n    }\n\n    doTableRow = (oilData, selectedOilArray) => {\n\n        return (\n\n            selectedOilArray.map((oil, rowIndex) => (\n\n                <SelectRow key={rowIndex}\n                    oils={oilData}\n                    oilPercentage={oil.oilPercentage}\n                    data={oil}\n                    defaultValue={oil.oilData.enName}\n                    index={rowIndex}\n                    totalOilGram={this.state.totalOilGram}\n                    totalPercentage={this.state.totalPercentage}\n                    handleOilSelect={this.handleOilSelect}\n                    handleOilPercentageChange={this.handleOilPercentageChange}\n                    handleDeleteRow={this.handleDeleteRow}\n                    handleOilGramChange={this.handleOilGramChange}\n                />\n\n            ))\n\n        )\n\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleInputChange}\n                        id=\"soapName\"\n                        value={this.state.soapName}\n                        className=\"soapName\"\n                    />\n                    <input\n                        type=\"date\"\n                        onChange={this.handleInputChange}\n                        id=\"date\"\n                        value={this.state.date || this.today}\n                        className=\"date\"\n                    />\n                </h1>\n                <ul className=\"topInfo\">\n                    <li>\n                      預計製作總油量：\n                      <input\n                        type=\"text\"\n                        onChange={this.handleInputChange}\n                        id=\"totalOilGram\"\n                        value={this.state.totalOilGram}\n                      />\n                      &nbsp;g\n                    </li>\n                    <li>\n                        <div className=\"addRowBtnArea\">\n                            <a\n                                href=\"javascript:;\"\n                                onClick={this.handleAddOil}\n                            >Add Oil</a>\n                        </div>\n                    </li>\n                </ul>\n                <div className=\"tableArea\">\n                    <ul className=\"tableHead\">\n                        <li>油品（建議%)</li>\n                        <li>INS</li>\n                        <li>皂化價</li>\n                        <li>x&nbsp;oil(g)</li>\n                        <li>=&nbsp;NaOH(g)</li>\n                        <li>oil(%)</li>\n                        <li>Calc. INS</li>\n                        <li>刪除</li>\n                    </ul>\n                    <div className=\"tableBody\">\n                        {this.doTableRow(oilList, this.state.oilLists)}\n                    </div>\n                    <ul className=\"tableFooter\">\n                        <li>Total</li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li>{this.state.totalNaOHGram}</li>\n                        <li>{this.state.totalPercentage}&nbsp;%</li>\n                        <li>{this.state.totalINS}</li>\n                        <li></li>\n                    </ul>\n                </div>\n                <ul className=\"bottomInfo\">\n                    <li>\n                        水重量：&nbsp;<span>{base.calc(this.state.totalWaterGram, 2)}</span>&nbsp;g\n                        &nbsp;（&nbsp;\n                        <input\n                            type=\"number\"\n                            onChange={this.handleWaterTimesInputChange}\n                            id=\"waterTimes\"\n                            className=\"waterTimes\"\n                        />\n                        &nbsp;倍&nbsp;）\n                    </li>\n                    <li>\n                        45%鹼水需要量：&nbsp;<span>{base.calc(base.strip(this.state.totalNaOHGram / 0.45), 0)}</span>&nbsp;g\n                    </li>\n                    <li>\n                        尚須水量：&nbsp;<span>{base.calc(base.strip(this.state.totalWaterGram - ((this.state.totalNaOHGram / 0.45) * 0.55)), 0)}</span>&nbsp;g\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}