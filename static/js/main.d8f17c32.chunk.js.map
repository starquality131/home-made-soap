{"version":3,"sources":["data/oilList.js","base/base.js","components/SelectRow.js","App.js","serviceWorker.js","index.js"],"names":["oilList","name","enName","saponificationValue","INS","iodineValue","suggestPercentage","feature","base","strip","num","precision","arguments","length","undefined","parseFloat","toPrecision","calc","fixed","toFixed","SelectRow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","doOilOptions","data","map","oil","oilOptionIndex","react_default","a","createElement","value","key","data-index","calculation","state","usePercentage","useOilGram","NaOHGram","className","id","onChange","handleOilSelect","defaultValue","data-row-index","index","oils","react","oilData","type","handleOilGramChange","oilGram","totalOilGram","oilPercentage","handleOilPercentageChange","href","onClick","handleDeleteRow","PureComponent","App","calcTotal","asyncToGenerator","regenerator_default","mark","_callee","totalNaOHGram","totalINS","totalWaterGram","totalPercentage","wrap","_context","prev","next","oilLists","forEach","waterTimes","setState","stop","updateOilLists","newOilLists","handleInputChange","e","concat","target","defineProperty","rowIndex","dataset","selectedOil","find","totalOilWeight","_ref2","_callee2","_context2","persist","_x","apply","splice","handleAddOil","objectSpread","defaultOilRowData","handleWaterTimesInputChange","waterTimesValue","doTableRow","selectedOilArray","components_SelectRow","defaultOilData","soapName","essentialOilPercentage","totalEssentialOilcc","additives","d","Date","year","getFullYear","month","getMonth","substr","date","getDate","today","join","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8f17c32.chunk.js","sourcesContent":["const oilList = [\n    {\n        name: '椰子油',\n        enName: 'Coconut',\n        // 皂化價\n        saponificationValue: 0.19,\n        INS: 258,\n        // 碘價\n        iodineValue: '10',\n        // 建議％\n        suggestPercentage: '15~35%',\n        // 特徵\n        feature: '可促進起泡',\n    },\n    {\n        name: '棕櫚油',\n        enName: 'Palm',\n        // 皂化價\n        saponificationValue: 0.141,\n        INS: 145,\n        // 碘價\n        iodineValue: '37-45',\n        // 建議％\n        suggestPercentage: '10~60%',\n        // 特徵\n        feature: '不易溶化變形的硬肥皂',\n    },\n    {\n        name: '紅棕櫚油',\n        enName: 'Red_Cocoa_Butter',\n        // 皂化價\n        saponificationValue: 0.141,\n        INS: 145,\n        // 碘價\n        iodineValue: '37-45',\n        // 建議％\n        suggestPercentage: '10~60%',\n        // 特徵\n        feature: '不易溶化變形的硬肥皂',\n    },\n    {\n        name: '可可脂',\n        enName: 'Cocoa_Butter',\n        // 皂化價\n        saponificationValue: 0.137,\n        INS: 157,\n        // 碘價\n        iodineValue: '33-44',\n        // 建議％\n        suggestPercentage: '5~10%',\n        // 特徵\n        feature: '不易溶化變形的硬肥皂,並能在皮膚上形成保護膜',\n    },\n    {\n        name: '乳油木果脂',\n        enName: 'Shea_Butter',\n        // 皂化價\n        saponificationValue: 0.128,\n        INS: 116,\n        // 碘價\n        iodineValue: '55-71',\n        // 建議％\n        suggestPercentage: '5~10%',\n        // 特徵\n        feature: '不易溶化變形的硬肥皂,並能在皮膚上形成保護膜',\n    },\n    {\n        name: '甜杏仁油',\n        enName: 'Almond_Sweet',\n        // 皂化價\n        saponificationValue: 0.136,\n        INS: 97,\n        // 碘價\n        iodineValue: '93-105',\n        // 建議％\n        suggestPercentage: '15~30%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '酪梨油',\n        enName: 'Avocado',\n        // 皂化價\n        saponificationValue: 0.133,\n        INS: 99,\n        // 碘價\n        iodineValue: '82-90',\n        // 建議％\n        suggestPercentage: '10~30%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '山茶花(椿油)',\n        enName: 'Camellia',\n        // 皂化價\n        saponificationValue: 0.1362,\n        INS: 108,\n        // 碘價\n        iodineValue: '78-88',\n        // 建議％\n        suggestPercentage: '可100%使用',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '蓖麻油',\n        enName: 'Castor',\n        // 皂化價\n        saponificationValue: 0.1286,\n        INS: 95,\n        // 碘價\n        iodineValue: '82-90',\n        // 建議％\n        suggestPercentage: '5~20%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '榛果油',\n        enName: 'Hazelnut',\n        // 皂化價\n        saponificationValue: 0.1356,\n        INS: 94,\n        // 碘價\n        iodineValue: '90-103',\n        // 建議％\n        suggestPercentage: '15~30%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '澳洲胡桃油',\n        enName: 'Macadamia',\n        // 皂化價\n        saponificationValue: 0.139,\n        INS: 119,\n        // 碘價\n        iodineValue: '73-79',\n        // 建議％\n        suggestPercentage: '15~30%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '橄欖油',\n        enName: 'Olive_Oil',\n        // 皂化價\n        saponificationValue: 0.134,\n        INS: 109,\n        // 碘價\n        iodineValue: '79-95',\n        // 建議％\n        suggestPercentage: '可100%使用',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '荷荷芭油',\n        enName: 'Jojoba',\n        // 皂化價\n        saponificationValue: 0.066,\n        INS: 11,\n        // 碘價\n        iodineValue: '80-85',\n        // 建議％\n        suggestPercentage: '5~10%',\n        // 特徵\n        feature: '保濕力',\n    },\n    {\n        name: '米糠油(玄米油)',\n        enName: 'Rice_Bran',\n        // 皂化價\n        saponificationValue: 0.128,\n        INS: 70,\n        // 碘價\n        iodineValue: '110',\n        // 建議％\n        suggestPercentage: '20%',\n        // 特徵\n        feature: '有清爽感覺肥皂的油',\n    },\n    {\n        name: '月見草油',\n        enName: 'Evening_Primrose',\n        // 皂化價\n        saponificationValue: 0.1357,\n        INS: 30,\n        // 碘價\n        iodineValue: '150-170',\n        // 建議％\n        suggestPercentage: '5%-superfatting',\n        // 特徵\n        feature: '對問題皮膚特別有效用的油',\n    },\n    {\n        name: '白油',\n        enName: 'Shortening_(veg.)',\n        // 皂化價\n        saponificationValue: 0.136,\n        INS: 115,\n        // 碘價\n        iodineValue: '90-95',\n        // 建議％\n        suggestPercentage: '10~20%',\n        // 特徵\n        feature: '',\n    },\n    {\n        name: '開心果油',\n        enName: 'Pistachio_Nut',\n        // 皂化價\n        saponificationValue: 0.1328,\n        INS: 92,\n        // 碘價\n        iodineValue: '93-96',\n        // 建議％\n        suggestPercentage: '20~72%',\n        // 特徵\n        feature: '',\n    },\n];\n\nexport default oilList;\n","export default {\n\n    strip: (num, precision = 12) => +parseFloat(num.toPrecision(precision)),\n    calc: (num, fixed = 0) => +parseFloat(num.toFixed(fixed)),\n\n};\n","/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { PureComponent, Fragment } from 'react';\nimport '../css/SelectRow.scss';\nimport base from '../base/base';\n\nclass SelectRow extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            usePercentage: '',\n            // 使用的油品g數\n            useOilGram: '',\n            // 需要的ＮaOHg數\n            NaOHGram: '',\n        };\n    }\n\n    doOilOptions = (data) => (\n\n        data.map((oil, oilOptionIndex) => (\n\n            <option \n                value={oil.enName} \n                key={oilOptionIndex}\n                data-index={oilOptionIndex}\n            >\n                {oil.name}\n            </option>\n\n        ))\n\n    )\n\n    calculation = () => {}\n\n    render() {\n\n        return (\n            <ul className=\"tableRow\">\n                <li className=\"tableCol oil_select\">\n                    <select \n                        id=\"oilName\"\n                        onChange={this.props.handleOilSelect}\n                        value={this.props.defaultValue}\n                        data-row-index={this.props.index}\n                    >\n                        {(this.props.defaultValue === '') ? (\n                            <option value=\"\">請選擇</option>\n                        ) : null}\n                        {this.doOilOptions(this.props.oils)}\n                    </select>\n                    {(this.props.defaultValue !== '') ? (\n                        <Fragment>\n                            &nbsp;<span>({this.props.data.oilData.suggestPercentage})</span>\n                        </Fragment>\n                    ) : null}\n                </li>\n                {/*INS*/}\n                <li className=\"tableCol\">{this.props.data.oilData.INS}</li>\n                {/*皂化價*/}\n                <li className=\"tableCol\">{this.props.data.oilData.saponificationValue}</li>\n                {/*oil g*/}\n                <li className=\"tableCol oil_gram\">\n                    <input\n                        type=\"number\"\n                        data-row-index={this.props.index}\n                        onChange={this.props.handleOilGramChange}\n                        value={this.props.data.oilGram}\n                    />&nbsp;g\n                </li>\n                {/*NaOH g*/}\n                <li className=\"tableCol\">\n                    {base.calc(base.strip(this.props.totalOilGram * this.props.data.oilPercentage / 100 * this.props.data.oilData.saponificationValue), 2)}\n                </li>\n                {/*oil %*/}\n                <li className=\"tableCol oil_percentage\">\n                    <input\n                        type=\"number\"\n                        data-row-index={this.props.index}\n                        onChange={this.props.handleOilPercentageChange}\n                        value={this.props.data.oilPercentage}\n                    />&nbsp;%\n                </li>\n                {/*Calc. INS*/}\n                <li className=\"tableCol\">\n                    {base.calc(base.strip(this.props.data.oilData.INS * this.props.data.oilPercentage / 100), 2)}\n                </li>\n                {/*操作*/}\n                <li className=\"tableCol\">\n                    <a \n                        className=\"delete_btn\"\n                        data-row-index={this.props.index}\n                        href=\"javascript:;\"\n                        onClick={this.props.handleDeleteRow}\n                    >-</a>\n                </li>\n            </ul>\n        );\n    }\n}\n\nexport default SelectRow;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from 'react';\nimport './App.css';\nimport oilList from './data/oilList';\nimport SelectRow from './components/SelectRow';\nimport base from './base/base';\n\nclass App extends Component {\n    constructor(props) {\n\n        super(props);\n\n        this.defaultOilData = {\n            name: '',\n            enName: '',\n            // 皂化價\n            saponificationValue: null,\n            INS: null,\n            // 碘價\n            iodineValue: null,\n            // 建議％\n            suggestPercentage: '',\n            // 特徵\n            feature: '',\n        };\n\n        this.defaultOilRowData = {\n            oilData: this.defaultOilData,\n            oilPercentage: 0,\n            oilGram: 0,\n        };\n\n        this.state = {\n            soapName: '',\n\n            oilLists: [\n                {...this.defaultOilRowData},\n                {...this.defaultOilRowData},\n                {...this.defaultOilRowData},\n            ],\n\n            // 總油重\n            totalOilGram: 700,\n            // 成品皂的INS\n            totalINS: 0,\n            // 總油％\n            totalPercentage: 0,\n\n            // 總NaOH重\n            totalNaOHGram: 0,\n            // 水的倍數\n            waterTimes: 0,\n            // 總水重\n            totalWaterGram: 0,\n\n            // 總精油%\n            essentialOilPercentage: null,\n            // 總精油%cc\n            totalEssentialOilcc: null,\n\n            // 添加物\n            additives: [],\n        };\n\n        const d = new Date(),\n            year = d.getFullYear(),\n            month = `0${d.getMonth() + 1}`.substr(-2),\n            date = `0${d.getDate()}`.substr(-2);\n        this.today = [year, month, date].join('-'); \n\n    }\n\n    calcTotal = async () => {\n\n        let totalNaOHGram = 0,\n            totalINS = 0,\n            totalWaterGram = 0,\n            totalPercentage = 0;\n\n        await this.state.oilLists.forEach((oil) => {\n\n            if (oil.oilData.saponificationValue) {\n\n                totalNaOHGram = base.calc(base.strip(totalNaOHGram + (this.state.totalOilGram * oil.oilPercentage / 100 * oil.oilData.saponificationValue)), 2);\n\n            }\n\n            if (oil.oilData.INS) {\n\n                totalINS = base.calc(base.strip(totalINS + (oil.oilPercentage / 100 * oil.oilData.INS)), 2);\n\n            }\n\n            totalPercentage = base.calc(base.strip(totalPercentage + oil.oilPercentage), 0);\n            \n        });\n\n        totalWaterGram = base.strip(totalNaOHGram * this.state.waterTimes);\n\n        this.setState({\n            totalNaOHGram,\n            totalINS,\n            totalWaterGram,\n            totalPercentage,\n        });\n\n    }\n\n    updateOilLists = (newOilLists) => {\n\n        this.setState({\n            oilLists: newOilLists\n        }, () => {\n\n            this.calcTotal();\n\n        });\n\n    }\n\n    handleInputChange = (e) => {\n\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists.forEach((oil) => {\n            oil.oilGram = base.calc(base.strip(e.target.value * oil.oilPercentage / 100), 0);\n        });\n\n        this.setState({ [e.target.id]: e.target.value }, () => {\n\n            this.updateOilLists(newOilLists);\n\n        });\n\n    }\n\n    handleOilSelect = (e) => {\n\n        const rowIndex = e.target.dataset.rowIndex;\n        const value = e.target.value;\n        const selectedOil = [].concat(oilList).find((oil) => oil.enName === value);\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists[rowIndex].oilData = selectedOil;\n\n        this.updateOilLists(newOilLists);\n    \n    }\n\n    handleOilPercentageChange = (e) => {\n\n        const rowIndex = e.target.dataset.rowIndex,\n            totalOilWeight = this.state.totalOilGram;\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists[rowIndex].oilPercentage = +e.target.value;\n        newOilLists[rowIndex].oilGram = base.strip(totalOilWeight * (+e.target.value) / 100);\n\n        this.updateOilLists(newOilLists);\n\n    }\n\n    handleOilGramChange = async (e) => {\n\n        e.persist();\n\n        const rowIndex = e.target.dataset.rowIndex;\n        let newOilLists = [].concat(this.state.oilLists),\n            totalOilWeight = 0;\n        newOilLists[rowIndex].oilGram = +e.target.value;\n        await newOilLists.forEach((oil) => {\n            totalOilWeight = totalOilWeight + oil.oilGram;\n        });\n        await newOilLists.forEach((oil) => {\n            oil.oilPercentage = base.calc(base.strip(oil.oilGram / totalOilWeight * 100), 0);\n        });\n\n        if (+e.target.value > 0) {\n\n            this.setState({\n                totalOilGram: totalOilWeight,\n            }, () => {\n\n                this.updateOilLists(newOilLists);\n\n            });\n\n        }\n\n    }\n\n    handleDeleteRow = (e) => {\n\n        const rowIndex = e.target.dataset.rowIndex;\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists.splice(rowIndex, 1);\n\n        this.updateOilLists(newOilLists);\n\n    }\n\n    handleAddOil = () => {\n\n        let newOilLists = [].concat(this.state.oilLists);\n        newOilLists = newOilLists.concat([{...this.defaultOilRowData}]);\n\n        this.updateOilLists(newOilLists);\n\n    }\n\n    handleWaterTimesInputChange =(e) => {\n\n        const waterTimesValue = e.target.value;\n        this.setState({\n            waterTimes: +waterTimesValue,\n            totalWaterGram: base.strip(waterTimesValue * this.state.totalNaOHGram)\n        });\n\n    }\n\n    doTableRow = (oilData, selectedOilArray) => {\n\n        return (\n\n            selectedOilArray.map((oil, rowIndex) => (\n\n                <SelectRow key={rowIndex}\n                    oils={oilData}\n                    oilPercentage={oil.oilPercentage}\n                    data={oil}\n                    defaultValue={oil.oilData.enName}\n                    index={rowIndex}\n                    totalOilGram={this.state.totalOilGram}\n                    totalPercentage={this.state.totalPercentage}\n                    handleOilSelect={this.handleOilSelect}\n                    handleOilPercentageChange={this.handleOilPercentageChange}\n                    handleDeleteRow={this.handleDeleteRow}\n                    handleOilGramChange={this.handleOilGramChange}\n                />\n\n            ))\n\n        )\n\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>\n                    <input\n                        type=\"text\"\n                        onChange={this.handleInputChange}\n                        id=\"soapName\"\n                        value={this.state.soapName}\n                        className=\"soapName\"\n                    />\n                    <input\n                        type=\"date\"\n                        onChange={this.handleInputChange}\n                        id=\"date\"\n                        value={this.state.date || this.today}\n                        className=\"date\"\n                    />\n                </h1>\n                <ul className=\"topInfo\">\n                    <li>\n                      預計製作總油量：\n                      <input\n                        type=\"text\"\n                        onChange={this.handleInputChange}\n                        id=\"totalOilGram\"\n                        value={this.state.totalOilGram}\n                      />\n                      &nbsp;g\n                    </li>\n                    <li>\n                        <div className=\"addRowBtnArea\">\n                            <a\n                                href=\"javascript:;\"\n                                onClick={this.handleAddOil}\n                            >Add Oil</a>\n                        </div>\n                    </li>\n                </ul>\n                <div className=\"tableArea\">\n                    <ul className=\"tableHead\">\n                        <li>油品（建議%)</li>\n                        <li>INS</li>\n                        <li>皂化價</li>\n                        <li>x&nbsp;oil(g)</li>\n                        <li>=&nbsp;NaOH(g)</li>\n                        <li>oil(%)</li>\n                        <li>Calc. INS</li>\n                        <li>刪除</li>\n                    </ul>\n                    <div className=\"tableBody\">\n                        {this.doTableRow(oilList, this.state.oilLists)}\n                    </div>\n                    <ul className=\"tableFooter\">\n                        <li>Total</li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li>{this.state.totalNaOHGram}</li>\n                        <li>{this.state.totalPercentage}&nbsp;%</li>\n                        <li>{this.state.totalINS}</li>\n                        <li></li>\n                    </ul>\n                </div>\n                <ul className=\"bottomInfo\">\n                    <li>\n                        水重量：&nbsp;<span>{base.calc(this.state.totalWaterGram, 2)}</span>&nbsp;g\n                        &nbsp;（&nbsp;\n                        <input\n                            type=\"number\"\n                            onChange={this.handleWaterTimesInputChange}\n                            id=\"waterTimes\"\n                            className=\"waterTimes\"\n                        />\n                        &nbsp;倍&nbsp;）\n                    </li>\n                    <li>\n                        45%鹼水需要量：&nbsp;<span>{base.calc(base.strip(this.state.totalNaOHGram / 0.45), 0)}</span>&nbsp;g\n                    </li>\n                    <li>\n                        尚須水量：&nbsp;<span>{base.calc(base.strip(this.state.totalWaterGram - ((this.state.totalNaOHGram / 0.45) * 0.55)), 0)}</span>&nbsp;g\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}